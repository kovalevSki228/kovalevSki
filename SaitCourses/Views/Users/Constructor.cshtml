@model SaitCourses.ViewModels.TShitsViewModel
<!DOCTYPE html>
<html>
<head>
    <title>lego</title>
    <link href="https://fonts.googleapis.com/css?family=Almarai:700,800&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="css.css" type="text/css" />
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <script type="text/javascript" src="js.js"></script>
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/fabric.js/3.4.0/fabric.min.js"></script>
    <meta content="width=device-width, initial-scale=1" name="viewport" />
</head>
<body>

    <div class="container marginT50 dropzone">
        <div class="row">
            <div class="col-sm">
                <canvas id="canvas" width="500px" height="500px"></canvas>
            </div>
            <div class="col-sm">
                <div class="container">
                    <form class="my-form" method="post" asp-controller="Image" asp-action="Constructor">
                        <h2 id="Tname">T-Shirts name:</h2>
                        <input asp-for="TShirtName" type="text">
                        <p>Description:</p>
                        <input asp-for="description" type="text">
                        <p>Topic:</p>
                        <input id="imageLink" asp-for="image" hidden />
                        <select class="form-control field-input mb-5 col-md-6" asp-for="Topic">
                            <option value="@Model.Topics[0]">@Model.Topics[0]</option>
                            @for (int i = 1; i < Model.Topics.Length; i++)
                            {
                                <option value="@Model.Topics[i]">@Model.Topics[i]</option>
                            }
                        </select>
                        <button type="submit" id="imageLink2" hidden></button>
                        <div id="containerTag" style="display: flex; flex-wrap: wrap; padding: 5px; padding-top: 10px;"></div>

                        <div>
                            <input asp-for="Tag" id="inputTag" onchange="tag()" />
                        </div>

                        <script>
                            function tag() {
                                let containerTag = document.getElementById("containerTag");
                                containerTag.innerHTML = "";
                                let text = document.getElementById("inputTag").value;
                                text = text.replace('  ', ' ');
                                let word = text.split(' ');
                                for (i = 0; i < word.length; i++) {
                                    if (word[i].Trim !== '') {
                                        let div = document.createElement("div");
                                        div.innerHTML = "<div class=\"styleTag\" style=\"padding: 2px; border: 2px solid black; border-radius: 10px; margin-right: 10px; margin-bottom: 5px;\">" + word[i] + "</div>";
                                        containerTag.appendChild(div);
                                    }
                                }
                            }
                        </script>
                        <hr id="line">

                    </form>
                    <!-- ---------------------------------------------------------------------------------- -->
                    <div class="btn-group btn-group-toggle" data-toggle="buttons">
                        <label class="btn btn-secondary active">
                            <input type="radio" name="r" value="l" onchange="check()">Man
                            <!--<input type="radio" name="sex" id="option1" autocomplete="off" checked onclick="check()">-->
                        </label>
                        <label class="btn btn-secondary">
                            <input type="radio" name="r" value="2" onchange="check()">Women
                            <!--<input type="radio" name="sex" id="option2" autocomplete="off" onclick="check()">-->
                        </label>
                    </div>
                    <!-------------------------------------------------------------------------------------  -->
                    <!-- ---------------------------------------------------------------------------------- -->
                    <div class="btn-group btn-group-toggle" data-toggle="buttons">
                        <label class="btn btn-secondary active">
                            <input type="radio" name="filter" value="blackAndWhite" onchange="changeImageFilter('blackAndWhite')">Man
                        </label>
                        <label class="btn btn-secondary">
                            <input type="radio" name="filter" value="sepia" onchange="changeImageFilter('sepia')">Women
                        </label>
                        <label class="btn btn-secondary">
                            <input type="radio" name="filter" value="pixelate" onchange="changeImageFilter('pixelate')">Women
                        </label>
                        <label class="btn btn-secondary">
                            <input type="radio" name="filter" value="none" onchange="changeImageFilter('none')">Women
                        </label>
                    </div>

                    
                    <!-------------------------------------------------------------------------------------  -->
                    <div class="container">
                        <div class="row">
                            <div class=".col-3 q">
                                <p class="">Color object:   <input type="color" class="" id="favcolor"></p>
                            </div>
                            <div class=".col-3 q">
                                <p class="">T-color: <input type="color" class="" id="tcolor"></p>
                            </div>
                            <div class=".col-3 q">
                                <label class="custom-file-upload">
                                    <input type="file" id="file" />
                                    <i class="fa fa-cloud-upload"></i>Upload File
                                </label>
                            </div>
                        </div>
                        <div class="row">
                            <div class=".col-3 q">
                                <button class="" onclick="save()">Save</button>



                            </div>
                            <div class=".col-3 q">
                                <button class="	" onclick="f()">Delete selected object</button>
                            </div>
                            <div class=".col-3 q">
                                <button class="" onclick="text()">Add text</button>
                            </div>
                        </div>
                    </div>
                    <button id="add" class="font700">Add to Bag</button>
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <hr id="line">
    </div>
    <div class="container">
        <div class="input-group mb-3">
            <input type="text" class="form-control" id="inputComment">
            <div class="input-group-append">
                <button id="comment" class="">Button</button>
            </div>
            <div class="progress" id="progress"></div>
        </div>
    </div>
   
    <script>$('.file-upload').file_upload();</script>
    <div class="file-upload-wrapper">
        <input type="file" id="input-file-now" class="file-upload" />
    </div>


    <form action="/file-upload"
          class="dropzone"
          id="my-awesome-dropzone"></form>

    <div id="dropbox">
        <h1 class="text-center">Upload files</h1>
        <form class="my-form">
            <div class="form_line">
                <div class="form_controls">
                    <div class="upload_button_holder">

                        <input type="file" id="fileElem" multiple accept="image/*" style="display:none" onchange="handleFiles(this.files)">
                        <img id="temp" src="" />
                        <a href="#" id="fileSelect">Select some files</a>
                    </div>
                </div>
            </div>
            <button type="submit">Save</button>
        </form>
        <div class="progress-bar" id="progress-bar">
            <div class="progress" id="progress"></div>
        </div>
        <div id="gallery" />
    </div>

</body>
</html>



    


<script type="text/javascript">


    var canvas = new fabric.Canvas('canvas');
    document.getElementById('file').addEventListener("change", function (e) {
        var file = e.target.files[0];
        var reader = new FileReader();
        reader.onload = function (f) {
            var data = f.target.result;
            fabric.Image.fromURL(data, function (img) {
                var oImg = img.set({ left: 0, top: 0, angle: 0, opacity: 0.85 }).scale(0.9);
                canvas.add(oImg).renderAll();
                var a = canvas.setActiveObject(oImg);
                var dataURL = canvas.toDataURL({ format: 'png', quality: 0.8 });
            });
        };
        reader.readAsDataURL(file);
    });


    canvas.setBackgroundImage('https://res.cloudinary.com/itr/image/upload/v1555868664/white_zkntjk.png', canvas.renderAll.bind(canvas));
    canvas.setOverlayImage('https://res.cloudinary.com/itr/image/upload/v1555868663/fon_qkezpa.png', canvas.renderAll.bind(canvas));

    function check() {
        var rarr = document.getElementsByName("r");
        if (rarr[0].checked) {
            canvas.setBackgroundImage('https://res.cloudinary.com/itr/image/upload/v1555868664/white_zkntjk.png', canvas.renderAll.bind(canvas));
            canvas.setOverlayImage('https://res.cloudinary.com/itr/image/upload/v1555868663/fon_qkezpa.png', canvas.renderAll.bind(canvas));
        }
        else {
            canvas.setBackgroundImage('https://res.cloudinary.com/del5wrr12/image/upload/v1572230069/shirtWoman_yjpuzc.png', canvas.renderAll.bind(canvas));
            canvas.setOverlayImage('https://res.cloudinary.com/del5wrr12/image/upload/v1572230069/shirtWomanBackground_mt4flk.png', canvas.renderAll.bind(canvas));
        }

    }



    var inp = document.querySelector("#file")
    inp.value = "";

    // var fonts = ["Pacifico", "VT323", "Quicksand", "Inconsolata"];

    function text() {
        var textbox = new fabric.Textbox('This is a Textbox', {
            left: 250,
            top: 250,
            fill: '#000',
            strokeWidth: 2,
            opacity: 0.85,
            stroke: "#000"
        });
        canvas.add(textbox);
    }
    function f() {
        var activeObject = canvas.getActiveObject();
        canvas.remove(activeObject);
    }

    function addShirtText(text) {
        if (!text) {
            return;
        }
        const shirtText = new fabric.Textbox(text, {
            left: 100,
            top: 100,
            fill: '#000',
            strokeWidth: 2,
            opacity: 0.85,
            stroke: '#000',
            fontFamily: 'Arial',
        });
        console.log(shirtText);
        canvas.add(shirtText);
    }

    //  removeShirtText() {
    //  const activeObject = this.preview.getActiveObject();
    //  if (!activeObject || !activeObject._text) {
    //    return;
    //  } else {
    //    this.preview.remove(activeObject);
    //  }
    //}

    function changeShirtTextFont(font) {
        const activeObject = this.preview.getActiveObject();
        if (!activeObject) {
            return;
        } else {
            activeObject.set(
                {
                    fontFamily: font,
                },
            );
            this.preview.renderAll();
        }
    }

    //changeShirtTextColor(color){
    //  const activeObject = this.preview.getActiveObject();
    //  if (!activeObject) {
    //    return;
    //  } else {
    //    activeObject.set(
    //      {
    //        fill: color,
    //        stroke: color,
    //      },
    //    );
    //    this.preview.renderAll();
    //  }
    //}



    function changeImageFilter(filter) {
        const activeObject = canvas.getActiveObject();
        var rarr = document.getElementsByName("filter");
        if (!activeObject || activeObject._cacheCanvas) {
            return;
        } else {
            switch (filter) {
                case 'blackAndWhite': {
                    activeObject.filters.push(new fabric.Image.filters.Saturation({ saturation: -1 }));
                    break;
                }
                case 'sepia': {
                    activeObject.filters.push(new fabric.Image.filters.Sepia());
                    break;
                }
                case 'pixelate': {
                    activeObject.filters.push(new fabric.Image.filters.Pixelate({ blocksize: 16 }));
                    break;
                }
                case 'none': {
                    activeObject.filters = [];
                    break;
                }
            }
            activeObject.applyFilters();
            canvas.requestRenderAll();
        }
    }

    //fonts.unshift('Times New Roman');

    //var select = document.getElementById("font-family");
    //fonts.forEach(function (font) {
    //    var option = document.createElement('option');
    //    option.innerHTML = font;
    //    option.value = font;
    //    select.appendChild(option);
    //});

    //// Apply selected font on change
    //document.getElementById('font-family').onchange = function () {
    //    if (this.value !== 'Times New Roman') {
    //        loadAndUse(this.value);
    //    } else {
    //        canvas.getActiveObject().set("fontFamily", this.value);
    //        canvas.requestRenderAll();
    //    }
    //};

    //function loadAndUse(font) {
    //    var myfont = new FontFaceObserver(font)
    //    myfont.load()
    //        .then(function () {
    //            // when font is loaded, use it.
    //            canvas.getActiveObject().set("fontFamily", font);
    //            canvas.requestRenderAll();
    //        }).catch(function (e) {
    //            console.log(e)
    //            alert('font loading failed ' + font);
    //        });
    //}

    // Load all

    var red = new fabric.Rect({
        top: 0,
        left: 0,
        width: 500,
        height: 500,
        opacity: 0.70,
        fill: 'white'
    });
    canvas.add(red);
    canvas.item(0).selectable = false;


    var tscolor = document.getElementById("tcolor");
    var theInput = document.getElementById("favcolor");
    tscolor.addEventListener("input", function () {
        var theColor = tscolor.value;
        var activeObject = canvas.getActiveObject();
        var d = canvas.item(0);
        d.set({
            fill: theColor,
            stroke: theColor
        });
        canvas.renderAll();
    }, true);
    theInput.addEventListener("input", function () {
        var theColor = theInput.value;
        var activeObject = canvas.getActiveObject();
        activeObject.set({
            fill: theColor,
            stroke: theColor
        });
        canvas.renderAll();
    }, true);

    const cloudName = 'del5wrr12';
    const unsignedUploadPreset = 'wschzlnr';

    function uploadFile(file) {
        var url = `https://api.cloudinary.com/v1_1/${cloudName}/upload`;
        var xhr = new XMLHttpRequest();
        var fd = new FormData();
        xhr.open('POST', url, true);
        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
        // Reset the upload progress bar
        document.getElementById('progress').style.width = 0;
        // Update progress (can be used to show progress indicator)
        xhr.upload.addEventListener("progress", function (e) {
            var progress = Math.round((e.loaded * 100.0) / e.total);
            document.getElementById('progress').style.width = progress + "%";
            console.log(`fileuploadprogress data.loaded: ${e.loaded},
  data.total: ${e.total}`);
        });
        xhr.onreadystatechange = function (e) {
            if (xhr.readyState == 4 && xhr.status == 200) {
                var response = JSON.parse(xhr.responseText);
                //// https://res.cloudinary.com/cloudName/image/upload/v1483481128/public_id.jpg
                var url = response.secure_url;
                document.getElementById("imageLink").setAttribute('value', url);
                $('#imageLink2').click();
                var tokens = url.split('/');
                tokens.splice(-2, 0, 'w_150,c_scale');
                var alt = response.public_id;
            }
        };
        fd.append('upload_preset', unsignedUploadPreset);
        fd.append('tags', 'browser_upload'); // Optional - add tag for image admin in Cloudinary
        fd.append('file', file);
        xhr.send(fd);
    }
    function save() {
        const file = new File([canvas.toSVG()], 'filename', { type: 'image/sv+xml' });
        uploadFile(file)
    }
</script>


